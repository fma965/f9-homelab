###################################
# ðŸ¦Ž KOMODO COMPOSE - POSTGRES ðŸ¦Ž #
###################################

## This compose file will deploy:
##   1. Postgres + FerretDB Mongo adapter (https://www.ferretdb.com)
##   2. Komodo Core
##   3. Komodo Periphery

services:
  ferretdb:
    image: ghcr.io/ferretdb/ferretdb:1
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    networks:
      - f9-nas
    # ports:
    #   - 27017:27017
    environment:
      - FERRETDB_POSTGRESQL_URL=postgres://10.0.10.201:5432/komodo

  core:
    image: ghcr.io/moghtech/komodo-core:1.19.0
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    depends_on:
      - ferretdb
    networks:
      - f9-nas
    ports:
      - 9120:9120
    env_file: ./.env
    environment:
      COMPOSE_LOGGING_DRIVER: local  # Enable log rotation with local driver
      # Database
      KOMODO_DATABASE_URI: mongodb://komodo:${KOMODO_DB_PASSWORD}@ferretdb:27017/${KOMODO_DATABASE_DB_NAME:-komodo}?authMechanism=PLAIN

      # Core Configuration
      KOMODO_HOST: https://komodo.f9.casa
      KOMODO_TITLE: Komodo
      KOMODO_FIRST_SERVER: https://periphery:8120
      KOMODO_DISABLE_CONFIRM_DIALOG: "true"

      # Monitoring Intervals
      KOMODO_MONITORING_INTERVAL: "15-sec"
      KOMODO_RESOURCE_POLL_INTERVAL: "5-min"

      # Security & Authentication
      KOMODO_LOCAL_AUTH: "false"
      KOMODO_DISABLE_USER_REGISTRATION: "false"
      KOMODO_ENABLE_NEW_USERS: "false"
      KOMODO_DISABLE_NON_ADMIN_CREATE: "false"
      KOMODO_TRANSPARENT_MODE: "false"
      KOMODO_JWT_TTL: "1-day"

      # OIDC Configuration
      KOMODO_OIDC_ENABLED: "true"
      KOMODO_OIDC_PROVIDER: https://auth.f9.casa/application/o/komodo/
      KOMODO_OIDC_CLIENT_ID: ABvdDGATi16F53lmoPehOVJIMtJm4y3ik1pY2igQ
    volumes:
      ## Core cache for repos for latest commit hash / contents
      - /mnt/user/appdata/komodo/repo-cache:/repo-cache
      ## Store sync files on server
      # - /path/to/syncs:/syncs
      ## Optionally mount a custom core.config.toml
      # - /path/to/core.config.toml:/config/config.toml
    ## Allows for systemd Periphery connection at
    ## "http://host.docker.internal:8120"
    # extra_hosts:
    #   - host.docker.internal:host-gateway

  ## Deploy Periphery container using this block,
  ## or deploy the Periphery binary with systemd using
  ## https://github.com/moghtech/komodo/tree/main/scripts
  periphery:
    image: ghcr.io/moghtech/komodo-periphery:1.18.4
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    networks:
      - f9-nas
    env_file: ./.env
    environment:
      # Periphery Configuration
      PERIPHERY_ROOT_DIRECTORY: /mnt/user/appdata/komodo
      PERIPHERY_SSL_ENABLED: "true"
      PERIPHERY_INCLUDE_DISK_MOUNTS: /etc/hostname

      PERIPHERY_REPO_DIR: ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/repos
      PERIPHERY_STACK_DIR: ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/stacks
      PERIPHERY_SSL_KEY_FILE: ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/ssl/key.pem
      PERIPHERY_SSL_CERT_FILE: ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/ssl/cert.pem
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      ## Allow Periphery to see processes outside of container
      - /proc:/proc
      ## Specify the Periphery agent root directory.
      ## Must be the same inside and outside the container,
      ## or docker will get confused. See https://github.com/moghtech/komodo/discussions/180.
      ## Default: /etc/komodo.
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}

  komodo-discord-alerter:
    image: foxxmd/komodo-discord-alerter:0.0.6
    restart: unless-stopped
    environment:
      TZ: Europe/London
      DISCORD_WEBHOOK: "${DISCORD_WEBHOOK}"
      UNRESOLVED_TIMEOUT_TYPES: "ServerCpu,StackStateChange,ContainerStateChange"
      UNRESOLVED_TIMEOUT: "120000"
    ports:
      - "7000:7000"
    networks:
      - "f9-nas"

networks:
  f9-nas:
    external: true
    name: "f9-nas"