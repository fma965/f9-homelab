---
globalArguments:
  - "--global.sendanonymoususage=false"
  - "--global.checknewversion=false"

additionalArguments:
  - "--serversTransport.insecureSkipVerify=true"
  - "--log.level=WARN"
  - "--accesslog=true"
  - "--providers.file.directory=/providers"
  - "--providers.file.watch=true"
  - "--entryPoints.web.http.middlewares=traefik-cloudflare@kubernetescrd"
  - "--entryPoints.websecure.http.middlewares=traefik-cloudflare@kubernetescrd"
deployment:
  enabled: true
  replicas: 3
  annotations:
    reloader.stakater.com/auto: "true"
  podAnnotations: {}
  additionalContainers: []
  initContainers: []
  additionalVolumes:
  - name: traefik-providers-secret
    secret:
      secretName: traefik-providers-secret

additionalVolumeMounts:
  - name: traefik-providers-secret
    mountPath: /providers

ports:
  web:
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true
  websecure:
    tls:
      enabled: true

ingressRoute:
  dashboard:
    enabled: false

providers:
  kubernetesCRD:
    enabled: true
    ingressClass: traefik-external
    allowExternalNameServices: true
    allowCrossNamespace: true
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    publishedService:
      enabled: false
rbac:
  enabled: true

service:
  enabled: true
  type: LoadBalancer
  annotations:
    io.cilium/lb-ipam-ips: 10.0.10.250
  labels: {}
  spec:
    loadBalancerIP: 10.0.10.250 # this should be an IP in the MetalLB range
#        externalTrafficPolicy: Local
  loadBalancerSourceRanges: []
  externalIPs: []

metrics:
  prometheus:
    service:
      enabled: true
    disableAPICheck: false
    serviceMonitor:
      enabled: true
      metricRelabelings:
        - sourceLabels: [__name__]
          separator: ;
          regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
          replacement: $1
          action: drop
      relabelings:
        - sourceLabels: [__meta_kubernetes_pod_node_name]
          separator: ;
          regex: ^(.*)$
          targetLabel: nodename
          replacement: $1
          action: replace
      jobLabel: traefik
      interval: 30s
      honorLabels: true
    headerLabels:
      user_id: X-User-Id
      tenant: X-Tenant
    prometheusRule:
      enabled: true
      rules:
        - alert: TraefikDown
          expr: up{job="traefik"} == 0
          for: 5m
          labels:
            context: traefik
            severity: warning
          annotations:
            summary: "Traefik Down"
            description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"

experimental:
  plugins:
    cloudflarewarp:
      moduleName: "github.com/fma965/cloudflarewarp"
      version: "v1.0.0"