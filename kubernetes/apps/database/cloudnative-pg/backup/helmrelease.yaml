---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cnpg-backup
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: cnpg-backup
  values:
    controllers:
      cnpg-backup:
        type: cronjob
        cronjob:
          concurrencyPolicy: Forbid
          schedule: "59 * * * *"
        pod:
          restartPolicy: OnFailure
          securityContext:
            fsGroup: 1000
            runAsGroup: 1000
            runAsUser: 1000
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                          - "amd64"
        containers:
          app:
            image:
              repository: ghcr.io/tensorchord/cloudnative-vectorchord
              # renovate: datasource=docker depName=ghcr.io/tensorchord/cloudnative-vectorchord versioning=redhat
              tag: 17.5-0.4.3
            env:
              PGHOST: postgres-rw.database
              PGPORT: "5432"
              PGUSER: postgres
              PGPASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: cloudnative-pg-secret
                    key: password
              TZ: ${TIMEZONE}
            command:
              - "/bin/sh"
            args:
              - "-c"
              - "pg_dumpall -U $PGUSER -F c | gzip > /backup/postgres17-cluster.dump.gz"
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                memory: 512Mi
    persistence:
      backup:
        type: nfs
        server: f9-nas.internal
        path: /mnt/Data/Kubernetes/postgres