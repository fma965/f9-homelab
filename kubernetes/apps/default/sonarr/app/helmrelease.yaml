---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.4.0@sha256:a9f405688344a8a6f718e2c344438342ad21540986aeb5ab5fa781831eb2c597
            env:
              INIT_POSTGRES_DBNAME: &dbName sonarr-main
              INIT_POSTGRES_HOST: &dbHost postgresql.postgresql.svc.cluster.local
              INIT_POSTGRES_USER: &dbUser sonarr
              INIT_POSTGRES_PASS: &dbPass
                valueFrom:
                  secretKeyRef:
                    name: sonarr-secret
                    key: SONARR_DB_PASSWORD
              INIT_POSTGRES_SUPER_USER: admin
              INIT_POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: database-superuser-secret
                    key: POSTGRESQL_PASS
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.15.2940@sha256:ca6c735014bdfb04ce043bf1323a068ab1d1228eea5bab8305ca0722df7baf78
            env:
              TZ: Europe/London
              SONARR__APP__INSTANCENAME: sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
              SONARR__POSTGRES__HOST: *dbHost
              SONARR__POSTGRES__PORT: 5432
              SONARR__POSTGRES__USER: *dbUser
              SONARR__POSTGRES__PASSWORD: *dbPass
              SONARR__POSTGRES__MAINDB: *dbName
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.f9.casa"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
      config-cache:
        existingClaim: "{{ .Release.Name }}-cache"
        globalMounts:
          - path: /config/MediaCover
      media:
        type: nfs
        server: f9-nas.internal
        path: "/mnt/user/Media/TV Shows"
        globalMounts:
          - path: /tv
      downloads:
        type: nfs
        server: f9-nas.internal
        path: /mnt/user/Downloads
        globalMounts:
          - path: /downloads
      tmp:
        type: emptyDir